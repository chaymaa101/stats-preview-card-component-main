@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Outfit:wght@300;400;600&family=Red+Hat+Display:wght@500;700;900&display=swap');
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{

    font-family:'inter';
    sans-serif;
    min-height: 100vh;
    background: hsl(233, 47%, 7%);
    display: flex;
    align-items: center;
    font-size: 15px;
}
.container{
    max-width: 1020px;
    margin: 0 auto;
}
.wrapper{
    background-color: hsl(244, 38%, 16%);
    display: grid;
    grid-template-columns: 50% 50%;
    /* vous pouvez utiliser la propriété "grid-template-columns" pour créer une grille pour vos images. Par exemple, vous pouvez créer une grille avec 3 colonnes de largeur égale pour afficher 3 images côte à côte */
    border-radius: 15px;
    overflow: hidden;
    /* pour cacher tout contenu qui dépasse les limites de l'élément, qui dans ce cas sont la taille de l'image. */
    margin: 2rem;
}
.img-component img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* object-fit: cover; veillera à ce que l'image soit mise à l'échelle et recadrée pour remplir complètement l'élément conteneur, tout excès d'image en dehors du conteneur étant masqué.
Cette propriété est souvent utilisée dans la conception web responsive, où la taille de l'élément conteneur peut varier en fonction de l'appareil ou de la taille de l'écran. En utilisant object-fit: cover;, les concepteurs peuvent garantir que les images ou vidéos seront toujours affichées de manière esthétique, quelle que soit la taille du conteneur. */
    
}
.img-component{
    position: relative;
}
.img-component::after{
    position: absolute;
    content: '';
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    background-color: hsl(277, 64%, 61% ,0.7);
    /* 0.7 c est pour l opacite */
}
.text-component{
    padding:13%;
}
.title{
    color: hsl(0, 0%, 100%);
    font-weight: 700;
    padding-bottom: 22px;
    /* "padding-bottom" définit la quantité d'espace vide qui doit être ajoutée sous le contenu de l'élément HTML spécifié. */

}
.title span{
    color:hsl(277, 64%, 61%) ;
}
.subtitle{
    color: hsla(0, 0%, 100%, 0.75);
    line-height: 1.8; 
}
.stat-box{
    display: flex;
    justify-content: space-between;
    text-transform: uppercase;
    /* text-transform: uppercase; indique que le texte qui suit cette ligne doit être affiché en lettres majuscules. En d'autres termes, tous les caractères alphabétiques dans le texte seront convertis en majuscules. Cette propriété est souvent utilisée pour créer un effet visuel ou stylistique particulier sur un élément de texte. */
    padding-top: 60px; 
    /*  pour la distance binha w bin l2ar9am li lta7t */
    margin-bottom: 8px;
}
.stat-box p.num{
    color: hsl(0, 0%, 100%);
    font-size: 25px;
    font-weight:700;
}
.stat-box p{
    color: hsla(0, 0%, 100%, 0.6);
}
@media only screen and ( max-width:768px ) and(min-width:425px){
    body{
        font-size: 12px;
    }
    .text-component{
        padding: 12%;
    }
    .title{
        font-size: 22px;
    }
    .stat-box{
        padding-top: 30px;
    }
    .stat-box p.num{
        font-size: 17px;
    }
}

@media only screen and ( max-width:622px ){
    body{
        text-align: center;
    }
    .wrapper{
        grid-template-columns: 1fr;
    }
    .img-component{
        order: -1;
        /* pour rendre l image en haut cad a lla premiere classe */
        
    }
    .text-component{
        padding: 12%  8%;
    }
    .title{
        font-size: 23px;
        line-height: 1.4;
    }
    .stat-box{
        flex-direction: column;
        padding-top: 30px;
    }
    .stat-box div{
        margin-top: 30px;
    }
}
 